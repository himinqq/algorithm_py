# 계단 규칙
# 한 번에 1칸 또는 2칸 이동 가능
# (연속 3번 불가능)
# 마지막 계단 반드시 밟아야 함
# 이 게임에서 얻을 수 있는 총 점수의 최댓값
import sys

n = int(input())

# 인덱스 1번부터 사용
stairs = [0] + [int(input().strip()) for _ in range(n)]

# 점화식 세우기
# D[i][j] = 현재까지 j개의 계단을 연속해서 밟고 i번째 계단까지 올라섰을 때 점수 합의 최댓값,
# 단 i번째 계단은 반드시 밟아야 함

# D[i][1] 연속 1개 밟음 = k만 밟았고, k-1은 안밟았음
# (계단 1칸 또는 2칸 올라갈 수 있으므로 k-2밟고 k로 온것)

# 점화식 D[k][1] = max(D[k-2][1],D[k-2][2]) + stairs[k]

# D[i][2] 연속 2개 밟음 = k,k-1을 연속으로 밟음
# 이때 D[k-1][2]는 불가, 왜냐면 연속3번 불가능

# 점화식 D[k][2] = D[k-1][1] + stairs[k]

# 초기값 정하기
# D[1][1] = S[1] D[1][2] = 0
# D[2][1] = S[2] D[2][2] = S[1] + S[2]

if n == 1:
    print(stairs[1])
    sys.exit(0)

d = [[0] * 3 for _ in range(n + 1)]

d[1][1] = stairs[1]
d[1][2] = 0 #1번째 계단까지만 왔다면, 연속 2칸 밟는 건 불가능
d[2][1] = stairs[2] #0번(시작점)에서 2번으로 2칸 점프
d[2][2] = stairs[1] + stairs[2] #1 → 2 계단을 연속으로 밟음

for i in range(3,n+1):
    d[i][1] = max(d[i-2][1], d[i-2][2]) + stairs[i]
    d[i][2] = d[i-1][1] + stairs[i]

print(max(d[n][1],d[n][2]))